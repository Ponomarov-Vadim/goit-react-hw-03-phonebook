{"version":3,"sources":["components/Filter/index.jsx","components/ContactForm/index.jsx","components/ContactList/index.jsx","components/App/index.jsx","index.js"],"names":["Filter","onChange","value","type","name","className","classNames","styled","input","initialState","number","isTelNumber","tel","Number","isNaN","split","join","ContactForm","state","handleChange","target","setState","handleSubmit","e","preventDefault","undefined","props","contacts","find","contact","addContact","alert","onSubmit","this","form","style","display","marginBottom","Component","ContactList","filter","deleteContact","map","toLowerCase","includes","key","id","li","span","onClick","button","App","prevState","v4","length","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fe9ca92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Filter = ({ onChange, value }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      className={classNames(styled.input)}\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styled from \"./ContactForm.module.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst isTelNumber = (tel) => !Number.isNaN(Number(tel.split(\"-\").join(\"\")));\r\n\r\nexport default class ContactForm extends Component {\r\n  state = { ...initialState };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      this.props.contacts.find(\r\n        (contact) => contact.name === this.state.name\r\n      ) === undefined\r\n    ) {\r\n      if (isTelNumber(this.state.number)) {\r\n        this.props.addContact(this.state.name, this.state.number);\r\n      } else {\r\n        alert(`\"${this.state.number}\" is incorrect telephone number`);\r\n      }\r\n    } else {\r\n      alert(`\"${this.state.name}\" is alredy in contacts`);\r\n    }\r\n\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={classNames(styled.form)}>\r\n        <h3>Name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={classNames(styled.input)}\r\n          style={{ display: \"block\", marginBottom: 10 }}\r\n          onChange={this.handleChange}\r\n          value={this.state.name}\r\n        />\r\n\r\n        <h3>Number</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          className={classNames(styled.input)}\r\n          onChange={this.handleChange}\r\n          value={this.state.number}\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst ContactList = ({ contacts, filter, deleteContact }) => (\r\n  <ul>\r\n    {contacts.map((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ? (\r\n        <li key={contact.id} className={classNames(styled.li)}>\r\n          <span className={classNames(styled.span)}>\r\n            {contact.name}: {contact.number}\r\n          </span>\r\n          <button\r\n            name={contact.id}\r\n            onClick={deleteContact}\r\n            className={classNames(styled.button)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ) : null\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport Filter from \"../Filter\";\r\nimport ContactForm from \"../ContactForm\";\r\nimport ContactList from \"../ContactList\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.state.contacts.length) {\r\n      const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n      if (contacts) {\r\n        this.setState({\r\n          contacts,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts.length !== this.state.contacts.length) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    if (name !== \"\" && number !== \"\") {\r\n      this.setState((prevState) => ({\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          { id: v4(), name: name, number: number },\r\n        ],\r\n      }));\r\n      return;\r\n    }\r\n    alert(\"Name or Number not entered\");\r\n  };\r\n\r\n  deleteContact = ({ target: { name } }) => {\r\n    this.setState((prevState) => ({\r\n      contacts: [\r\n        ...prevState.contacts.filter((contact) => contact.id !== name),\r\n      ],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          addContact={this.addContact}\r\n          contacts={this.state.contacts}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        {this.state.contacts.length > 1 ? (\r\n          <Filter onChange={this.handleChange} value={this.state.filter} />\r\n        ) : null}\r\n\r\n        <ContactList\r\n          contacts={this.state.contacts}\r\n          filter={this.state.filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}